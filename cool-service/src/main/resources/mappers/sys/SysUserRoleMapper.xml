<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cool.dao.SysUserRoleMapper">

	<resultMap type="com.cool.model.SysUserRole" id="resultMap">
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="role_id" property="roleId"/>
		<result column="enable" property="enable"/>
		<result column="remark" property="remark"/>
		<result column="create_by" property="createBy"/>
		<result column="create_time" property="createTime"/>
		<result column="update_by" property="updateBy"/>
		<result column="update_time" property="updateTime"/>
	</resultMap>
	
	<sql id="allFields">
		id,user_id,role_id,enable,remark,create_by,create_time,update_by,update_time
	</sql>
	
	<insert id="insert">
		inert into sys_user_role 
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="userId != null">
				user_id,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
			<if test="enable != null">
				enable,
			</if>
			<if test="remark != null and remark != ''">
				remark,
			</if>
			<if test="createBy != null and createBy != ''">
				create_by,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="userId != null">
				#{userId},
			</if>
			<if test="roleId != null">
				#{roleId},
			</if>
			<if test="enable != null">
				#{enable},
			</if>
			<if test="remark != null and remark != ''">
				#{deptremarkId},
			</if>
			<if test="createBy != null and createBy != ''">
				#{createBy},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
		</trim>
	</insert>

	<!-- 根据id查询 -->
	<select id="selectByPrimaryKey"  resultMap="resultMap" parameterType="java.lang.Long">
		select <include refid="allFields" />
		 from sys_user_role where id = #{id}
	</select>
	
	<delete id="deleteAllByPrimaryKey" parameterType="Object">
		delete from sys_user_role
		where id in
		<foreach item="id" collection="list" open="(" close=")" separator=",">
             #{id}
        </foreach>
	</delete>
	
	<!-- 根据userId查询 -->
	<select id="selectByUserId"  resultMap="resultMap" parameterType="java.lang.Long">
		select <include refid="allFields" />
		from sys_user_role where user_id = #{userId}
	</select>
	
	<!-- 根据userIds查询 -->
	<select id="selectAllByUserIds"  resultMap="resultMap" parameterType="java.lang.Long">
		select <include refid="allFields" />
		where user_id in
		<foreach item="userId" collection="list" open="(" close=")" separator=",">
             #{userId}
        </foreach>
	</select>
	
	<!-- 根据userIds删除记录 -->
	<delete id="deleteAllByUserIds" parameterType="Object">
		delete from sys_user_role
		where user_id in
		<foreach item="userId" collection="list" open="(" close=")" separator=",">
             #{userId}
        </foreach>
	</delete>
	
	<!-- 根据roleIds删除记录 -->
	<delete id="deleteAllByRoleIds" parameterType="Object">
		delete from sys_user_role
		where role_id in
		<foreach item="roleId" collection="list" open="(" close=")" separator=",">
             #{roleId}
        </foreach>
	</delete>
</mapper>