<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cool.dao.SysMenuMapper">
	<resultMap type="com.cool.model.SysMenu" id="resultMap">
		<id column="id" property="id"/>
		<result column="menu_name" property="menuName"/>
		<result column="menu_type" property="menuType"/>
		<result column="parent_id" property="parentId"/>
		<result column="iconcls" property="iconcls"/>
		<result column="request" property="request"/>
		<result column="expand" property="expand"/>
		<result column="sort_no" property="sortNo"/>
		<result column="is_show" property="isShow"/>
		<result column="permission" property="permission"/>
		<result column="enable" property="enable"/>
		<result column="remark" property="remark"/>
		<result column="create_by" property="createBy"/>
		<result column="create_time" property="createTime"/>
		<result column="update_by" property="updateBy"/>
		<result column="update_time" property="updateTime"/>
	</resultMap>
	
	<resultMap type="com.cool.model.expand.SysMenuTree" id="resultTreeMap">
		<id column="id" property="id"/>
		<result column="menu_name" property="menuName"/>
		<result column="menu_type" property="menuType"/>
		<result column="parent_id" property="parentId"/>
		<result column="iconcls" property="iconcls"/>
		<result column="request" property="request"/>
		<result column="expand" property="expand"/>
		<result column="sort_no" property="sortNo"/>
		<result column="is_show" property="isShow"/>
		<result column="permission" property="permission"/>
		<result column="enable" property="enable"/>
		<result column="remark" property="remark"/>
		<result column="create_by" property="createBy"/>
		<result column="create_time" property="createTime"/>
		<result column="update_by" property="updateBy"/>
		<result column="update_time" property="updateTime"/>
	</resultMap>
	
	<sql id="allFields">
		id,menu_name,menu_type,parent_id,iconcls,request,expand,sort_no,is_show,
		permission,enable,remark,create_by,create_time,update_by,update_time
	</sql>
	
	<sql id="whereSql">
	<where>
		1=1
		<if test="id != null">
			and id = #{id}
		</if>
		<if test="menuName !=  null and menuName != ''">
			and menu_name = #{menuName}
		</if>
		<if test="menuType != null">
			and menu_type = #{menuType}
		</if>
		<if test="parentId != null">
			and parent_id = #{parentId}
		</if>
		<if test="iconcls != null and iconcls != ''">
			and iconcls = #{iconcls}
		</if>
		<if test="request != null and request != ''">
			and request = #{request}
		</if>
		<if test="expand != null">
			and expand = #{expand}
		</if>
		<if test="sortNo != null">
			and sort_no = #{sortNo}
		</if>
		<if test="isShow != null">
			and is_show = #{isShow}
		</if>
		<if test="permission != null and permission != ''">
			and permission = #{permission}
		</if>
		<if test="enable != null">
			and enable = #{enable}
		</if>
	</where>
	</sql>
	
	<select id="querySysMenuByUserId" parameterType="Object" resultMap="resultMap">
		select 
			<include refid="allFields"></include>
		from sys_menu
		where enable = 1 and id in (
			select srm.menu_id 
				from sys_role_menu srm where enable = 1 and exists (
				select sr.id from sys_user_role sur 
					left join sys_role sr on sur.role_id = sr.id 
				where sur.enable = 1 and sur.id = #{userId} and sur.id = srm.role_id)
		)
	</select>
	
	<select id="queryForList" parameterType="Object" resultMap="resultMap">
		select 
			<include refid="allFields"></include>
		from sys_menu
			<include refid="whereSql"></include>
	</select>
	
	<select id="queryMenuListByUserId" parameterType="Object" resultMap="resultMap">
		select 
			<include refid="allFields"></include>
		from sys_menu where enable = 1 and id in (
			select menu_id from sys_user_menu where user_id = #{userId} and enable = 1
		)
	</select>
	
	<select id="queryMenuTree" parameterType="Object" resultMap="resultTreeMap">
		select 
			<include refid="allFields"></include>
		from sys_menu
		where enable = #{enable} and menu_type != 0 
			and id in (
			select srm.menu_id 
				from sys_role_menu srm where enable = 1 and exists (
				select sr.id from sys_user_role sur 
					left join sys_role sr on sur.role_id = sr.id 
				where sur.enable = #{enable} and sur.id = #{userId} and sur.id = srm.role_id)
		)
	</select>
	
</mapper>